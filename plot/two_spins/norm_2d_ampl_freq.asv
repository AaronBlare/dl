clear all;
addpath('E:/Work/os_lnd/source/matlab/lib')

path = 'E:/YandexDisk/Work/dl/datasets/floquet_lindbladian/two_spins';
figures_path = path;

model = 'inception';
epochs = 500;

gamma_1 = 0.05;
gamma_2 = 0.05;

ampl_begin = 0.05;
ampl_shift = 0.1;
ampl_num = 10;
ampl_chunks = 10;
ampl_stride = ampl_shift * ampl_num;

freq_begin = 0.05;
freq_shift = 0.1;
freq_num = 10;
freq_chunks = 10;
freq_stride = freq_shift * freq_num;
ph = 0;

ampl_num_global = ampl_num * ampl_chunks;
freq_num_global = freq_num * freq_chunks;

suffix = sprintf('ampl(%0.4f_%0.4f_%d)_freq(%0.4f_%0.4f_%d)_phase(%0.4f_%0.4f_%d)', ...
    ampl_begin, ...
    ampl_shift, ...
    ampl_num_global, ...
    freq_begin, ...
    freq_shift, ...
    freq_num_global, ...
    ph, ...
    0, ...
    0);

fn_txt = sprintf('%s/ampls_dl_%s.txt', path, suffix);
ampls_dl = importdata(fn_txt);

fn_txt = sprintf('%s/freqs_dl_%s.txt', path, suffix);
freqs_dl = importdata(fn_txt);

fn_txt = sprintf('%s/norm_dl_1_%s.txt', path, suffix);
norm_dl_1 = importdata(fn_txt);

fn_txt = sprintf('%s/%s/norms_predicted_%d_%s.txt', path, model, epochs, suffix);
norms_predicted_dl = importdata(fn_txt);

fn_txt = sprintf('%s/%s/loss_%d_%s.txt', path, model, epochs, suffix);
loss_dl = importdata(fn_txt);

norms_original = zeros(ampl_num_global, freq_num_global);
norms_predicted = zeros(ampl_num_global, freq_num_global);
loss = zeros(ampl_num_global, freq_num_global);

ampls = linspace(ampl_begin, ampl_begin + (ampl_num_global - 1) * ampl_shift, ampl_num_global)';
freqs = linspace(freq_begin, freq_begin + (freq_num_global - 1) * freq_shift, freq_num_global)';

for ampl_id_1 = 1:ampl_chunks
	fprintf('ampl_id_1: %d\n', ampl_id_1);
    for freq_id_1 = 1:freq_chunks
        
        ampl_start = ampl_begin + ampl_stride * (ampl_id_1 - 1);
        freq_start = freq_begin + freq_stride * (freq_id_1 - 1);

        for ampl_id_2 = 1:ampl_num
            for freq_id_2 = 1:freq_num
                index = (ampl_id_2 - 1) * freq_num + freq_id_2;
                
                ampl_id = (ampl_id_1 - 1) * ampl_num + ampl_id_2;
                freq_id = (freq_id_1 - 1) * freq_num + freq_id_2;
                
                norms_original(ampl_id, freq_id) = norm_dl_1(index);
                norms_predicted(ampl_id, freq_id) = norms_predicted_dl(index);
                loss(ampl_id, freq_id) = loss_dl(index);
            end
        end
    end
end


fn_txt = sprintf('%s/norm_2d_2_%s.txt', aggr_path, suffix);
pdf2d_2 = importdata(fn_txt);



pdf2d_1 = log10(pdf2d_1);
pdf2d_2 = log10(pdf2d_2); 

fig = figure;
imagesc(ampls, freqs, pdf2d_1');
set(gca, 'FontSize', 30);
xlabel('$A$', 'Interpreter', 'latex');
set(gca, 'FontSize', 30);
ylabel('$\omega$', 'Interpreter', 'latex');
colormap hot;
h = colorbar;
set(gca, 'FontSize', 30);
title(h, '$\log_{10}(norm)$', 'FontSize', 33, 'interpreter','latex');
set(gca,'YDir','normal');
hold all;
fn_fig = sprintf('%s/norm2d_1_%s', figures_path, suffix);
oqs_save_fig(fig, fn_fig);

fig = figure;
imagesc(ampls, freqs, pdf2d_2');
set(gca, 'FontSize', 30);
xlabel('$A$', 'Interpreter', 'latex');
set(gca, 'FontSize', 30);
ylabel('$\omega$', 'Interpreter', 'latex');
colormap hot;
h = colorbar;
set(gca, 'FontSize', 30);
title(h, '$\log_{10}(norm)$', 'FontSize', 33, 'interpreter','latex');
set(gca,'YDir','normal');
hold all;
fn_fig = sprintf('%s/norm2d_2_%s', figures_path, suffix);
oqs_save_fig(fig, fn_fig);

fig = figure;
imagesc(ampls, freqs, diff_pdf');
set(gca, 'FontSize', 30);
xlabel('$A$', 'Interpreter', 'latex');
set(gca, 'FontSize', 30);
ylabel('$\omega$', 'Interpreter', 'latex');
colormap hot;
h = colorbar;
set(gca, 'FontSize', 30);
title(h, '$\frac{2 \omega}{\pi} \frac{norm_2}{norm_1}$', 'FontSize', 33, 'interpreter','latex');
set(gca,'YDir','normal');
hold all;
fn_fig = sprintf('%s/diff_norm_%s', figures_path, suffix);
oqs_save_fig(fig, fn_fig);
